name: CI
on: [push]

jobs:
  job:
    name: ${{ matrix.name }}-${{ matrix.buildType }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu-gcc-8, ubuntu-gcc-9, ubuntu-clang, macos-clang, windows-msvc-2019, windows-gcc]
        buildType: [Release]
        include:
          - name: windows-msvc-2019
            os: windows
            cxx: cl.exe
            cc: cl.exe
            triplet: x64-windows
            generator: Visual Studio 16 2019
          - name: windows-gcc
            os: windows
            cxx: gcc.exe
            cc: g++.exe
            triplet: x64-windows
            generator: Ninja
          - name: ubuntu-gcc-8
            os: ubuntu
            cxx: g++-8
            cc: gcc-8
            triplet: x64-linux
            generator: Ninja
            cxxFlags: -march=native
          - name: ubuntu-gcc-9
            os: ubuntu
            cxx: g++-9
            cc: gcc-9
            triplet: x64-linux
            generator: Ninja
            cxxFlags: -march=native
          - name: ubuntu-clang
            os: ubuntu
            cxx: clang++
            cc: clang
            triplet: x64-linux
            generator: Ninja
          - name: macos-clang
            os: macos
            cxx: clang++
            cc: clang
            triplet: x64-osx
            generator: Ninja

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: lukka/get-cmake@latest
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Set Environment vars
        run: |
          echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV
          echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV

      - name: Print Compiler Version
        if: runner.os != 'Windows'
        run: |
          ${{ matrix.cxx }} --version

      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@v6
        id: runvcpkg
        with:
          # Just install vcpkg for now, do not install any ports in this step yet.
          setupOnly: true
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}

      - name: Run CMake+Ninja
        uses: lukka/run-cmake@v3
        id: runcmake
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          vcpkgTriplet: ${{ matrix.triplet }}
          useVcpkgToolchainFile: true
          buildDirectory: '${{ runner.workspace }}/b/${{ matrix.name }}/'
          cmakeAppendedArgs: '-G "${{ matrix.generator }}" -DCMAKE_BUILD_TYPE=${{ matrix.buildType }} -DCMAKE_CXX_FLAGS="${{ matrix.cxxFlags }}"'
          
      # - name: Run CTest
      #  run: |
      #    cd ${{ runner.workspace }}/b/${{ matrix.name }}/test
      #    ctest -V
